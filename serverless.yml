useDotenv: true
service: portfolio-website

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-2
  stage: dev
  environment:
    SENDER_EMAIL: ${ssm:/portfolio/email/sender}
    RECIPIENT_EMAIL: ${ssm:/portfolio/email/recipient}
    RECAPTCHA_SECRET_KEY: ${ssm:/portfolio/recaptcha/secret-key}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ses:SendEmail
            - ses:SendRawEmail
            - cloudfront:CreateInvalidation
          Resource: "*"

custom:
  s3Sync:
    - bucketName: gavinlc.co.uk
      localDir: dist
      deleteRemoved: true
      defaultContentType: text/html
      params:
        - "**/*.ico":
            CacheControl: 'public, max-age=31536000'
        - "**/*.png":
            CacheControl: 'public, max-age=31536000'
        - "**/*.webmanifest":
            CacheControl: 'public, max-age=31536000'
        - "**/*.json":
            CacheControl: 'public, max-age=31536000'
  cloudfrontInvalidate:
    - distributionId: E3NCCHB0RQE7U9
      items:
        - '/*'

functions:
  sendEmail:
    handler: lambda/emailHandler.handler
    events:
      - http:
          path: send-email
          method: post
          cors:
            origin: https://gavinlc.co.uk,https://www.gavinlc.co.uk
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
            maxAge: 86400
          request:
            passThrough: WHEN_NO_MATCH

plugins:
  - serverless-s3-sync
  - serverless-cloudfront-invalidate